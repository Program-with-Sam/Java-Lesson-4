@startuml

title __ABSTRACTION's Class Diagram__\n

  namespace abstraction {
    class abstraction.Bicycle {
        ~ Bicycle()
    }
  }
  

  namespace abstraction {
    class abstraction.Car {
        + Car()
    }
  }
  

  namespace abstraction {
    class abstraction.Lorry {
        # maxWeight : double
        ~ Lorry()
    }
  }
  

  namespace abstraction {
    class abstraction.Main {
        {static} + main()
    }
  }
  

  namespace abstraction {
    abstract class abstraction.ManualVehicle {
        ~ powerMethod : Object
        ~ ManualVehicle()
    }
  }
  

  namespace abstraction {
    abstract class abstraction.MotorisedVehicle {
        # numHeadlights : int
        ~ MotorisedVehicle()
    }
  }
  

  namespace abstraction {
    abstract class abstraction.Vehicle {
        - numSeats : int
        - numWheels : int
        - topSpeed : int
        ~ Vehicle()
    }
  }
  

  abstraction.Bicycle -up-|> abstraction.ManualVehicle
  abstraction.Car -up-|> abstraction.MotorisedVehicle
  abstraction.Lorry -up-|> abstraction.MotorisedVehicle
  abstraction.ManualVehicle -up-|> abstraction.Vehicle
  abstraction.MotorisedVehicle -up-|> abstraction.Vehicle


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
